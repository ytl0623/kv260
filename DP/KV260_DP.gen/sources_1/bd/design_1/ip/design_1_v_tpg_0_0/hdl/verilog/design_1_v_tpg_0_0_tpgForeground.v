// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_tpg_0_0_tpgForeground (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        bckgndYUV_dout,
        bckgndYUV_empty_n,
        bckgndYUV_read,
        height_dout,
        height_empty_n,
        height_read,
        width_dout,
        width_empty_n,
        width_read,
        p_read,
        p_read1,
        colorFormat_dout,
        colorFormat_empty_n,
        colorFormat_read,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        motionSpeed_dout,
        motionSpeed_empty_n,
        motionSpeed_read,
        ovrlayYUV_din,
        ovrlayYUV_full_n,
        ovrlayYUV_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] bckgndYUV_dout;
input   bckgndYUV_empty_n;
output   bckgndYUV_read;
input  [15:0] height_dout;
input   height_empty_n;
output   height_read;
input  [15:0] width_dout;
input   width_empty_n;
output   width_read;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] colorFormat_dout;
input   colorFormat_empty_n;
output   colorFormat_read;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [7:0] motionSpeed_dout;
input   motionSpeed_empty_n;
output   motionSpeed_read;
output  [23:0] ovrlayYUV_din;
input   ovrlayYUV_full_n;
output   ovrlayYUV_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg bckgndYUV_read;
reg height_read;
reg width_read;
reg colorFormat_read;
reg motionSpeed_read;
reg ovrlayYUV_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] boxHCoord;
reg   [15:0] boxVCoord;
reg    height_blk_n;
reg    width_blk_n;
reg    colorFormat_blk_n;
reg    motionSpeed_blk_n;
wire   [7:0] empty_fu_240_p1;
reg   [7:0] empty_reg_474;
reg   [7:0] motionSpeed_read_reg_491;
reg   [15:0] loopWidth_reg_496;
reg   [15:0] loopHeight_reg_501;
wire   [0:0] tobool_fu_244_p2;
reg   [0:0] tobool_reg_506;
wire   [0:0] cmp11_i159_fu_250_p2;
reg   [0:0] cmp11_i159_reg_511;
wire   [7:0] pixOut_fu_256_p3;
reg   [7:0] pixOut_reg_516;
wire   [0:0] cmp13_i_fu_264_p2;
reg   [0:0] cmp13_i_reg_521;
wire   [15:0] hMax_fu_270_p2;
reg   [15:0] hMax_reg_526;
wire   [15:0] vMax_fu_276_p2;
reg   [15:0] vMax_reg_531;
wire   [0:0] and4_i_fu_286_p2;
reg   [0:0] and4_i_reg_536;
wire   [0:0] and10_i_fu_300_p2;
reg   [0:0] and10_i_reg_541;
wire   [0:0] and24_i_fu_314_p2;
reg   [0:0] and24_i_reg_546;
wire   [7:0] empty_69_fu_320_p1;
reg   [7:0] empty_69_reg_551;
wire   [0:0] icmp_fu_334_p2;
reg   [0:0] icmp_reg_556;
wire   [7:0] empty_70_fu_340_p1;
reg   [7:0] empty_70_reg_561;
wire   [8:0] shl_i_fu_344_p3;
reg   [8:0] shl_i_reg_566;
wire   [1:0] select_ln1933_fu_360_p3;
reg   [1:0] select_ln1933_reg_571;
reg   [15:0] y_1_reg_576;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1921_fu_406_p2;
reg   [0:0] icmp_ln1921_reg_590;
wire   [0:0] icmp_ln728_fu_387_p2;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_start;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_done;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_idle;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_ready;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_bckgndYUV_read;
wire   [23:0] grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ovrlayYUV_din;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ovrlayYUV_write;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord_loc_1_out;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord_loc_1_out_ap_vld;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord_loc_1_out;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord_loc_1_out_ap_vld;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord_ap_vld;
wire   [15:0] grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord;
wire    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord_ap_vld;
reg    grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_start_reg;
wire    ap_CS_fsm_state3;
reg   [15:0] y_fu_104;
wire   [15:0] y_2_fu_392_p2;
reg    ap_block_state1;
reg   [15:0] boxVCoord_loc_0_fu_108;
wire    ap_CS_fsm_state4;
reg   [15:0] boxHCoord_loc_0_fu_112;
wire   [0:0] empty_68_fu_282_p1;
wire   [0:0] tmp_fu_292_p3;
wire   [0:0] tmp_2_fu_306_p3;
wire   [6:0] tmp_3_fu_324_p4;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 boxHCoord = 16'd0;
#0 boxVCoord = 16'd0;
#0 grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_start_reg = 1'b0;
end

design_1_v_tpg_0_0_tpgForeground_Pipeline_VITIS_LOOP_730_2 grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_start),
    .ap_done(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_done),
    .ap_idle(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_idle),
    .ap_ready(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_ready),
    .bckgndYUV_dout(bckgndYUV_dout),
    .bckgndYUV_empty_n(bckgndYUV_empty_n),
    .bckgndYUV_read(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_bckgndYUV_read),
    .ovrlayYUV_din(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ovrlayYUV_din),
    .ovrlayYUV_full_n(ovrlayYUV_full_n),
    .ovrlayYUV_write(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ovrlayYUV_write),
    .boxHCoord_loc_0(boxHCoord_loc_0_fu_112),
    .boxVCoord_loc_0(boxVCoord_loc_0_fu_108),
    .loopWidth(loopWidth_reg_496),
    .pixOut_6(empty_70_reg_561),
    .pixOut(pixOut_reg_516),
    .pixOut_4(empty_69_reg_551),
    .and4_i(and4_i_reg_536),
    .and24_i(and24_i_reg_546),
    .tobool(tobool_reg_506),
    .and10_i(and10_i_reg_541),
    .p_read(p_read),
    .p_read4(p_read4),
    .y(y_1_reg_576),
    .zext_ln1872(motionSpeed_read_reg_491),
    .vMax(vMax_reg_531),
    .hMax(hMax_reg_526),
    .zext_ln1872_1(shl_i_reg_566),
    .cmp72_i(icmp_reg_556),
    .p_read6(empty_reg_474),
    .p_read2(p_read2),
    .icmp_ln1921(icmp_ln1921_reg_590),
    .cmp11_i159(cmp11_i159_reg_511),
    .cmp13_i(cmp13_i_reg_521),
    .select_ln1933_1(select_ln1933_reg_571),
    .boxHCoord_loc_1_out(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord_loc_1_out),
    .boxHCoord_loc_1_out_ap_vld(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord_loc_1_out_ap_vld),
    .boxVCoord_loc_1_out(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord_loc_1_out),
    .boxVCoord_loc_1_out_ap_vld(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord_loc_1_out_ap_vld),
    .boxHCoord(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord),
    .boxHCoord_ap_vld(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord_ap_vld),
    .boxVCoord(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord),
    .boxVCoord_ap_vld(grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln728_fu_387_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln728_fu_387_p2 == 1'd0))) begin
            grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_start_reg <= 1'b1;
        end else if ((grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_ready == 1'b1)) begin
            grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        boxHCoord_loc_0_fu_112 <= boxHCoord;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        boxHCoord_loc_0_fu_112 <= grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord_loc_1_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        boxVCoord_loc_0_fu_108 <= boxVCoord;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        boxVCoord_loc_0_fu_108 <= grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord_loc_1_out;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_fu_104 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln728_fu_387_p2 == 1'd0))) begin
        y_fu_104 <= y_2_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        and10_i_reg_541 <= and10_i_fu_300_p2;
        and24_i_reg_546 <= and24_i_fu_314_p2;
        and4_i_reg_536 <= and4_i_fu_286_p2;
        cmp11_i159_reg_511 <= cmp11_i159_fu_250_p2;
        cmp13_i_reg_521 <= cmp13_i_fu_264_p2;
        empty_69_reg_551 <= empty_69_fu_320_p1;
        empty_70_reg_561 <= empty_70_fu_340_p1;
        empty_reg_474 <= empty_fu_240_p1;
        hMax_reg_526 <= hMax_fu_270_p2;
        icmp_reg_556 <= icmp_fu_334_p2;
        loopHeight_reg_501 <= height_dout;
        loopWidth_reg_496 <= width_dout;
        motionSpeed_read_reg_491 <= motionSpeed_dout;
        pixOut_reg_516[6 : 4] <= pixOut_fu_256_p3[6 : 4];
        select_ln1933_reg_571 <= select_ln1933_fu_360_p3;
        shl_i_reg_566[8 : 1] <= shl_i_fu_344_p3[8 : 1];
        tobool_reg_506 <= tobool_fu_244_p2;
        vMax_reg_531 <= vMax_fu_276_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord_ap_vld == 1'b1))) begin
        boxHCoord <= grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxHCoord;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord_ap_vld == 1'b1))) begin
        boxVCoord <= grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_boxVCoord;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln728_fu_387_p2 == 1'd0))) begin
        icmp_ln1921_reg_590 <= icmp_ln1921_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y_1_reg_576 <= y_fu_104;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln728_fu_387_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln728_fu_387_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bckgndYUV_read = grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_bckgndYUV_read;
    end else begin
        bckgndYUV_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        colorFormat_blk_n = colorFormat_empty_n;
    end else begin
        colorFormat_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        colorFormat_read = 1'b1;
    end else begin
        colorFormat_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_blk_n = height_empty_n;
    end else begin
        height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        height_read = 1'b1;
    end else begin
        height_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        motionSpeed_blk_n = motionSpeed_empty_n;
    end else begin
        motionSpeed_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        motionSpeed_read = 1'b1;
    end else begin
        motionSpeed_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ovrlayYUV_write = grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ovrlayYUV_write;
    end else begin
        ovrlayYUV_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_blk_n = width_empty_n;
    end else begin
        width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        width_read = 1'b1;
    end else begin
        width_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln728_fu_387_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and10_i_fu_300_p2 = (tmp_fu_292_p3 & cmp11_i159_fu_250_p2);

assign and24_i_fu_314_p2 = (tmp_2_fu_306_p3 & cmp11_i159_fu_250_p2);

assign and4_i_fu_286_p2 = (empty_68_fu_282_p1 & cmp11_i159_fu_250_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (motionSpeed_empty_n == 1'b0) | (colorFormat_empty_n == 1'b0) | (width_empty_n == 1'b0) | (height_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign cmp11_i159_fu_250_p2 = ((colorFormat_dout == 8'd0) ? 1'b1 : 1'b0);

assign cmp13_i_fu_264_p2 = ((colorFormat_dout == 8'd1) ? 1'b1 : 1'b0);

assign empty_68_fu_282_p1 = p_read1[0:0];

assign empty_69_fu_320_p1 = p_read5[7:0];

assign empty_70_fu_340_p1 = p_read7[7:0];

assign empty_fu_240_p1 = p_read6[7:0];

assign grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_start = grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ap_start_reg;

assign hMax_fu_270_p2 = (width_dout - p_read4);

assign icmp_fu_334_p2 = ((tmp_3_fu_324_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln1921_fu_406_p2 = ((y_fu_104 != p_read3) ? 1'b1 : 1'b0);

assign icmp_ln728_fu_387_p2 = ((y_fu_104 == loopHeight_reg_501) ? 1'b1 : 1'b0);

assign ovrlayYUV_din = grp_tpgForeground_Pipeline_VITIS_LOOP_730_2_fu_196_ovrlayYUV_din;

assign pixOut_fu_256_p3 = ((cmp11_i159_fu_250_p2[0:0] == 1'b1) ? 8'd240 : 8'd128);

assign select_ln1933_fu_360_p3 = ((cmp13_i_fu_264_p2[0:0] == 1'b1) ? 2'd1 : 2'd2);

assign shl_i_fu_344_p3 = {{motionSpeed_dout}, {1'd0}};

assign tmp_2_fu_306_p3 = p_read1[32'd2];

assign tmp_3_fu_324_p4 = {{colorFormat_dout[7:1]}};

assign tmp_fu_292_p3 = p_read1[32'd1];

assign tobool_fu_244_p2 = ((p_read1 == 8'd0) ? 1'b1 : 1'b0);

assign vMax_fu_276_p2 = (height_dout - p_read4);

assign y_2_fu_392_p2 = (y_fu_104 + 16'd1);

always @ (posedge ap_clk) begin
    pixOut_reg_516[3:0] <= 4'b0000;
    pixOut_reg_516[7] <= 1'b1;
    shl_i_reg_566[0] <= 1'b0;
end

endmodule //design_1_v_tpg_0_0_tpgForeground
